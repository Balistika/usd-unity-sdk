#build_args:
#  no_python: --build-monolithic --alembic --no-python --no-imaging
#  full: --build-monolithic --alembic --openimageio
usd_versions:
  - version: v19.11
    dir_name: USD-19.11
  - version: v20.08
    dir_name: USD-20.08
  - version: v20.11
    dir_name: USD-20.11
usd_flavors:
  - name: minimal
    build_args:  --build-monolithic --alembic --no-imaging --no-examples --no-tutorials
    output_dir_suffix: ""
  - name: minimal, no python
    build_args: --build-monolithic --alembic --no-python --no-imaging --no-examples --no-tutorials
    output_dir_suffix: _no_python
build_platforms:
  - name: win
    type: Unity::VM
    image: filmtv/usd_build_win10_image:latest
    flavor: b1.xlarge
    setenv_cmd: call "C:\\Program Files (x86)\Microsoft Visual Studio\\2017\\BuildTools\\VC\\Auxiliary\\Build\\vcvars64.bat"
  - name: mac
    type: Unity::VM::osx
    image: filmtv/usd_build_macos_image:latest
    flavor: m1.mac
    setenv_cmd: echo "Environment set"
  - name: linux
    type: Unity::VM
    image: filmtv/usd_build_linux_image:latest
    flavor: b1.large
    setenv_cmd: echo "Environment set"
---
{% for platform in build_platforms %}
{% for usd_version in usd_versions %}
{{usd_version.version}}_{{platform.name}}:
  name: {{usd_version.version}} - {{platform.name}} - Build USD library 
  skip_checkout: true
  agent:
    type: {{platform.type}}
    image: {{platform.image}}
    flavor: {{platform.flavor}}
  commands:
    - |
      {{platform.setenv_cmd}}
      wget https://github.com/PixarAnimationStudios/USD/archive/{{usd_version.version}}.zip
      unzip {{usd_version.version}}.zip
      cd {{usd_version.dir_name}}
      python build_scripts/build_usd.py --build-monolithic --alembic --no-imaging --no-examples --no-tutorials ../artifacts/usd-{{usd_version.version}}
      rm -rf ../artifacts/usd-{{usd_version.version}}/build
      rm -rf ../artifacts/usd-{{usd_version.version}}/src
      python build_scripts/build_usd.py --build-monolithic --alembic --no-python --no-imaging --no-examples --no-tutorials ../artifacts/usd-{{usd_version.version}}_no_python
      rm -rf ../artifacts/usd-{{usd_version.version}}_no_python/build
      rm -rf ../artifacts/usd-{{usd_version.version}}_no_python/src
      cd ../artifacts
      tar -cvzf usd-{{usd_version.version}}-{{platform.name}}.tar.gz usd-{{usd_version.version}}/* usd-{{usd_version.version}}_no_python/* 
      curl -sSo StevedoreUpload.exe "%STEVEDORE_UPLOAD_TOOL_URL%"
      StevedoreUpload.exe --version-len=12 --repo=testing --version="%GIT_REVISION%" usd-{{usd_version.version}}-{{platform.name}}.tar.gz
  artifacts:
      {{platform.name}}_usd_{{usd_version.version}}:
        paths:
          - "artifacts/*gz"
{% endfor %}  
{% endfor %}


{% for platform in build_platforms %}
{% for usd_version in usd_versions %}
{{platform.name}}_usd_{{usd_version.version}}_bindings:
  name: {{usd_version.version}} - {{platform.name}} - Build C# bindings
  agent:
    type: {{platform.type}}
    image: {{platform.image}}
    flavor: {{platform.flavor}}
  commands:
    - |
      python3 bin\build.py "{{usd_version.version}}" "../../libs/pixar" "2019.4"
  artifacts:
      {{platform.name}}_usdCs_v{{usd_version.version}}:
        paths:
          - "package/Runtime/Plugins/x86_64/{{platform.name}}/**"
{% endfor %}
{% endfor %}


{% for usd_version in usd_versions %}
{{usd_version.version}}_publish_bindings:
  name: {{usd_version.version}} - Publish C# bindings
  skip_checkout: true
  agent:
    type: linux
    image: filmtv/usd_build_linux_image:latest
    flavor: b1.small
  dependencies:
    - .yamato/build_usd.yml#win_usd_v{{usd_version.version}}_bindings
    - .yamato/build_usd.yml#mac_usd_v{{usd_version.version}}_bindings
    - .yamato/build_usd.yml#linux_usd_v{{usd_version.version}}_bindings
  commands:
    - bin/commit_bindings.sh
{% endfor %}

test_stevedore_job:
  name: Stevedore test
  agent:
    type: Unity::VM
    image: filmtv/usd_build_win10_image:latest
    flavor: b1.xlarge
  commands: 
    - |
      curl -sSo StevedoreUpload.exe "%STEVEDORE_UPLOAD_TOOL_URL%"
      echo.> usd-20.08-win64
      tar -cvzf  usd-20.08-win64.tar.gz usd-20.08-win64
      StevedoreUpload.exe --version-len=12 --repo=testing --version="%GIT_REVISION%" usd-20.08-win64.tar.gz
