#build_args:
#  no_python: --build-monolithic --alembic --no-python --no-imaging
#  full: --build-monolithic --alembic --openimageio
#usd_versions:
#  - version: 19.11
#  - version: 20.08
build_platforms:
  - name: win
    type: Unity::VM
    image: filmtv/usd_build_win10_image:latest
    flavor: b1.large
    setenv_cmd: for /f "usebackq delims=#" %a in (`"%programfiles(x86)%\\Microsoft Visual Studio\\Installer\\vswhere" -latest -property installationPath`) do "%a\\Common7\\Tools\\VsDevCmd.bat"
    cmake_cmd: cmake -S .. -B . -DPXR_USD_LOCATION=C:/Users/bokken/libs/usd-v20.08_no_python -DPXR_USD_LOCATION_PYTHON_BUILT=C:/Users/bokken/libs/usd-v20.08_no_python -DUNITY_VERSION=2019.4 -DBUILD_USD_NET=TRUE -DBUILD_TESTS=TRUE -DCMAKE_MODULE_PATH=C:/Users/bokken/usd-unity-sdk/cmake/modules -G "NMake Makefiles"
    make_cmd: nmake SHELL=cmd install -j8
  - name: mac
    type: Unity::VM::osx
    image: filmtv/usd_build_macos_image:latest
    flavor: m1.mac
    setenv_cmd: echo "Environment set"
    cmake_cmd: cmake -S .. -B . -DPXR_USD_LOCATION=/home/bokken/libs/usd-v20.08_no_python -DPXR_USD_LOCATION_PYTHON_BUILT=/home/bokken/libs/usd-v20.08_no_python -DUNITY_VERSION=2019.4 -DBUILD_USD_NET=TRUE -DBUILD_TESTS=TRUE -DCMAKE_MODULE_PATH=/home/bokken/usd-unity-sdk/cmake/modules -G "Unix Makefiles"
    make_cmd: make install -j8
  - name: linux
    type: Unity::VM
    image: filmtv/usd_build_linux_image:latest
    flavor: b1.large
    setenv_cmd: echo "Environment set"
    cmake_cmd: cmake -S .. -B . -DPXR_USD_LOCATION=/home/bokken/libs/usd-v20.08_no_python -DPXR_USD_LOCATION_PYTHON_BUILT=/home/bokken/libs/usd-v20.08_no_python -DUNITY_VERSION=2019.4 -DBUILD_USD_NET=TRUE -DBUILD_TESTS=TRUE -DCMAKE_MODULE_PATH=/home/bokken/usd-unity-sdk/cmake/modules -G "Unix Makefiles"
    make_cmd: make install -j8
---
{% for platform in build_platforms %}
{{platform.name}}_v20.08_no_python:
  name: {{platform.name}} - Build USD v20.08 (no python)
  skip_checkout: true
  agent:
    type: {{platform.type}}
    image: {{platform.image}}
    flavor: {{platform.flavor}}
  commands:
    - |
      {{platform.setenv_cmd}}
      wget https://github.com/PixarAnimationStudios/USD/archive/v20.08.zip
      unzip v20.08.zip
      cd USD-20.08
      python build_scripts/build_usd.py --build-monolithic --alembic --no-python --no-imaging --no-examples --no-tutorials ../libs/usd-v20.08_no_python
  artifacts:
      {{platform.name}}_v20.08_no_python:
        paths:
          - "../libs/usd-v20.08_no_python/**"
{% endfor %}

{% for platform in build_platforms %}
{{platform.name}}_v20.08:
  name: {{platform.name}} - Build USD v20.08 (full)
  skip_checkout: true
  agent:
    type: {{platform.type}}
    image: {{platform.image}}
    flavor: {{platform.flavor}}
  commands:
    - |
      {{platform.setenv_cmd}}
      set PATH=%PATH%;C:\Program Files\CMake\bin
      wget https://github.com/PixarAnimationStudios/USD/archive/v20.08.zip
      unzip v20.08.zip
      cd USD-20.08
      python build_scripts/build_usd.py --build-monolithic --alembic --no-imaging --no-examples --no-tutorials ../libs/usd-v20.08
  artifacts:
    {{platform.name}}_v20.08:
      paths:
        - "libs/usd-v20.08/**"
{% endfor %}

{% for platform in build_platforms %}
{{platform.name}}_usd_v20.08_bindings:
  name: {{platform.name}} - Build USD v20.08 C# bindings
  agent:
    type: {{platform.type}}
    image: {{platform.image}}
    flavor: {{platform.flavor}}
  dependencies:
    - .yamato/build_usd.yml#{{platform.name}}_v20.08
    - .yamato/build_usd.yml#{{platform.name}}_v20.08_no_python
  commands:
    - |
        {{platform.setenv_cmd}}
        mkdir build
        cd build
        {{platform.cmake_cmd}}
        {{platform.make_cmd}}
  artifacts:
      {{platform.name}}_usdCs_v20.08:
        paths:
          - "package/Runtime/Plugins/x86_64/{{platform.name}}/**"
  {% endfor %}

