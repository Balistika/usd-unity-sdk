//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace pxr {

public class UsdGeomLinearUnits : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal UsdGeomLinearUnits(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(UsdGeomLinearUnits obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~UsdGeomLinearUnits() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          UsdCsPINVOKE.delete_UsdGeomLinearUnits(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public UsdGeomLinearUnits() : this(UsdCsPINVOKE.new_UsdGeomLinearUnits(), true) {
  }

  public static readonly double nanometers = UsdCsPINVOKE.UsdGeomLinearUnits_nanometers_get();
  public static readonly double micrometers = UsdCsPINVOKE.UsdGeomLinearUnits_micrometers_get();
  public static readonly double millimeters = UsdCsPINVOKE.UsdGeomLinearUnits_millimeters_get();
  public static readonly double centimeters = UsdCsPINVOKE.UsdGeomLinearUnits_centimeters_get();
  public static readonly double meters = UsdCsPINVOKE.UsdGeomLinearUnits_meters_get();
  public static readonly double kilometers = UsdCsPINVOKE.UsdGeomLinearUnits_kilometers_get();
  public static readonly double lightYears = UsdCsPINVOKE.UsdGeomLinearUnits_lightYears_get();
  public static readonly double inches = UsdCsPINVOKE.UsdGeomLinearUnits_inches_get();
  public static readonly double feet = UsdCsPINVOKE.UsdGeomLinearUnits_feet_get();
  public static readonly double yards = UsdCsPINVOKE.UsdGeomLinearUnits_yards_get();
  public static readonly double miles = UsdCsPINVOKE.UsdGeomLinearUnits_miles_get();
}

}
