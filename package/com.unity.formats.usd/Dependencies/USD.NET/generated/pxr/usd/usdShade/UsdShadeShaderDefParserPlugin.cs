//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace pxr {

public class UsdShadeShaderDefParserPlugin : NdrParserPlugin {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal UsdShadeShaderDefParserPlugin(global::System.IntPtr cPtr, bool cMemoryOwn) : base(UsdCsPINVOKE.UsdShadeShaderDefParserPlugin_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(UsdShadeShaderDefParserPlugin obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          UsdCsPINVOKE.delete_UsdShadeShaderDefParserPlugin(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public UsdShadeShaderDefParserPlugin() : this(UsdCsPINVOKE.new_UsdShadeShaderDefParserPlugin(), true) {
  }

  public override TfTokenVector GetDiscoveryTypes() {
    TfTokenVector ret = new TfTokenVector(UsdCsPINVOKE.UsdShadeShaderDefParserPlugin_GetDiscoveryTypes(swigCPtr), false);
    return ret;
  }

  public override TfToken GetSourceType() {
    TfToken ret = new TfToken(UsdCsPINVOKE.UsdShadeShaderDefParserPlugin_GetSourceType(swigCPtr), false);
    return ret;
  }

}

}
