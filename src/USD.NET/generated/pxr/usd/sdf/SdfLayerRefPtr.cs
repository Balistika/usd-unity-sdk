//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace pxr {

public class SdfLayerRefPtr : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SdfLayerRefPtr(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SdfLayerRefPtr obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~SdfLayerRefPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          UsdCsPINVOKE.delete_SdfLayerRefPtr(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SdfLayerRefPtr(SdfLayer layer) : this(UsdCsPINVOKE.new_SdfLayerRefPtr(SdfLayer.getCPtr(layer)), true) {
  }

  public SdfLayer __deref__() {
    global::System.IntPtr cPtr = UsdCsPINVOKE.SdfLayerRefPtr___deref__(swigCPtr);
    SdfLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new SdfLayer(cPtr, false);
    return ret;
  }

  public static bool Equals(SdfLayerRefPtr lhs, SdfLayerRefPtr rhs) {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_Equals(SdfLayerRefPtr.getCPtr(lhs), SdfLayerRefPtr.getCPtr(rhs));
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string ExportToString() {
    string ret = UsdCsPINVOKE.SdfLayerRefPtr_ExportToString(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_SdfSchemaBase GetSchema() {
    SWIGTYPE_p_SdfSchemaBase ret = new SWIGTYPE_p_SdfSchemaBase(UsdCsPINVOKE.SdfLayerRefPtr_GetSchema(swigCPtr), false);
    return ret;
  }

  public bool IsEmpty() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_IsEmpty(swigCPtr);
    return ret;
  }

  public bool IsAnonymous() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_IsAnonymous(swigCPtr);
    return ret;
  }

  public bool Save() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_Save(swigCPtr);
    return ret;
  }

  public bool Export(string filename, string comment, SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t args) {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_Export__SWIG_0(swigCPtr, filename, comment, SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t.getCPtr(args));
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Export(string filename, string comment) {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_Export__SWIG_1(swigCPtr, filename, comment);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Export(string filename) {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_Export__SWIG_2(swigCPtr, filename);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string GetIdentifier() {
    string ret = UsdCsPINVOKE.SdfLayerRefPtr_GetIdentifier(swigCPtr);
    return ret;
  }

  public string GetDisplayName() {
    string ret = UsdCsPINVOKE.SdfLayerRefPtr_GetDisplayName(swigCPtr);
    return ret;
  }

  public string GetRealPath() {
    string ret = UsdCsPINVOKE.SdfLayerRefPtr_GetRealPath(swigCPtr);
    return ret;
  }

  public string GetFileExtension() {
    string ret = UsdCsPINVOKE.SdfLayerRefPtr_GetFileExtension(swigCPtr);
    return ret;
  }

  public string GetVersion() {
    string ret = UsdCsPINVOKE.SdfLayerRefPtr_GetVersion(swigCPtr);
    return ret;
  }

  public string GetRepositoryPath() {
    string ret = UsdCsPINVOKE.SdfLayerRefPtr_GetRepositoryPath(swigCPtr);
    return ret;
  }

  public string GetAssetName() {
    string ret = UsdCsPINVOKE.SdfLayerRefPtr_GetAssetName(swigCPtr);
    return ret;
  }

  public VtValue GetAssetInfo() {
    VtValue ret = new VtValue(UsdCsPINVOKE.SdfLayerRefPtr_GetAssetInfo(swigCPtr), false);
    return ret;
  }

  public SdfSpecType GetSpecType(SdfPath path) {
    SdfSpecType ret = (SdfSpecType)UsdCsPINVOKE.SdfLayerRefPtr_GetSpecType(swigCPtr, SdfPath.getCPtr(path));
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool HasSpec(SdfPath path) {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_HasSpec(swigCPtr, SdfPath.getCPtr(path));
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public TfTokenVector ListFields(SdfPath path) {
    TfTokenVector ret = new TfTokenVector(UsdCsPINVOKE.SdfLayerRefPtr_ListFields(swigCPtr, SdfPath.getCPtr(path)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool HasField(SdfPath path, TfToken fieldName) {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_HasField(swigCPtr, SdfPath.getCPtr(path), TfToken.getCPtr(fieldName));
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool HasFieldDictKey(SdfPath path, TfToken fieldName, TfToken keyPath) {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_HasFieldDictKey(swigCPtr, SdfPath.getCPtr(path), TfToken.getCPtr(fieldName), TfToken.getCPtr(keyPath));
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public VtValue GetField(SdfPath path, TfToken fieldName) {
    VtValue ret = new VtValue(UsdCsPINVOKE.SdfLayerRefPtr_GetField(swigCPtr, SdfPath.getCPtr(path), TfToken.getCPtr(fieldName)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public VtValue GetFieldDictValueByKey(SdfPath path, TfToken fieldName, TfToken keyPath) {
    VtValue ret = new VtValue(UsdCsPINVOKE.SdfLayerRefPtr_GetFieldDictValueByKey(swigCPtr, SdfPath.getCPtr(path), TfToken.getCPtr(fieldName), TfToken.getCPtr(keyPath)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SdfAssetPath GetColorConfiguration() {
    SdfAssetPath ret = new SdfAssetPath(UsdCsPINVOKE.SdfLayerRefPtr_GetColorConfiguration(swigCPtr), true);
    return ret;
  }

  public bool HasColorConfiguration() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_HasColorConfiguration(swigCPtr);
    return ret;
  }

  public TfToken GetColorManagementSystem() {
    TfToken ret = new TfToken(UsdCsPINVOKE.SdfLayerRefPtr_GetColorManagementSystem(swigCPtr), true);
    return ret;
  }

  public bool HasColorManagementSystem() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_HasColorManagementSystem(swigCPtr);
    return ret;
  }

  public string GetComment() {
    string ret = UsdCsPINVOKE.SdfLayerRefPtr_GetComment(swigCPtr);
    return ret;
  }

  public TfToken GetDefaultPrim() {
    TfToken ret = new TfToken(UsdCsPINVOKE.SdfLayerRefPtr_GetDefaultPrim(swigCPtr), true);
    return ret;
  }

  public string GetDocumentation() {
    string ret = UsdCsPINVOKE.SdfLayerRefPtr_GetDocumentation(swigCPtr);
    return ret;
  }

  public double GetStartTimeCode() {
    double ret = UsdCsPINVOKE.SdfLayerRefPtr_GetStartTimeCode(swigCPtr);
    return ret;
  }

  public bool HasStartTimeCode() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_HasStartTimeCode(swigCPtr);
    return ret;
  }

  public double GetEndTimeCode() {
    double ret = UsdCsPINVOKE.SdfLayerRefPtr_GetEndTimeCode(swigCPtr);
    return ret;
  }

  public bool HasEndTimeCode() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_HasEndTimeCode(swigCPtr);
    return ret;
  }

  public double GetTimeCodesPerSecond() {
    double ret = UsdCsPINVOKE.SdfLayerRefPtr_GetTimeCodesPerSecond(swigCPtr);
    return ret;
  }

  public bool HasTimeCodesPerSecond() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_HasTimeCodesPerSecond(swigCPtr);
    return ret;
  }

  public double GetFramesPerSecond() {
    double ret = UsdCsPINVOKE.SdfLayerRefPtr_GetFramesPerSecond(swigCPtr);
    return ret;
  }

  public bool HasFramesPerSecond() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_HasFramesPerSecond(swigCPtr);
    return ret;
  }

  public int GetFramePrecision() {
    int ret = UsdCsPINVOKE.SdfLayerRefPtr_GetFramePrecision(swigCPtr);
    return ret;
  }

  public bool HasFramePrecision() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_HasFramePrecision(swigCPtr);
    return ret;
  }

  public string GetOwner() {
    string ret = UsdCsPINVOKE.SdfLayerRefPtr_GetOwner(swigCPtr);
    return ret;
  }

  public bool HasOwner() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_HasOwner(swigCPtr);
    return ret;
  }

  public string GetSessionOwner() {
    string ret = UsdCsPINVOKE.SdfLayerRefPtr_GetSessionOwner(swigCPtr);
    return ret;
  }

  public bool HasSessionOwner() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_HasSessionOwner(swigCPtr);
    return ret;
  }

  public bool GetHasOwnedSubLayers() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_GetHasOwnedSubLayers(swigCPtr);
    return ret;
  }

  public VtDictionary GetCustomLayerData() {
    VtDictionary ret = new VtDictionary(UsdCsPINVOKE.SdfLayerRefPtr_GetCustomLayerData(swigCPtr), true);
    return ret;
  }

  public bool HasCustomLayerData() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_HasCustomLayerData(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_SdfPrimSpecView GetRootPrims() {
    SWIGTYPE_p_SdfPrimSpecView ret = new SWIGTYPE_p_SdfPrimSpecView(UsdCsPINVOKE.SdfLayerRefPtr_GetRootPrims(swigCPtr), true);
    return ret;
  }

  public void ApplyRootPrimOrder(TfTokenVector vec) {
    UsdCsPINVOKE.SdfLayerRefPtr_ApplyRootPrimOrder(swigCPtr, TfTokenVector.getCPtr(vec));
  }

  public uint GetNumSubLayerPaths() {
    uint ret = UsdCsPINVOKE.SdfLayerRefPtr_GetNumSubLayerPaths(swigCPtr);
    return ret;
  }

  public SdfLayerOffsetVector GetSubLayerOffsets() {
    SdfLayerOffsetVector ret = new SdfLayerOffsetVector(UsdCsPINVOKE.SdfLayerRefPtr_GetSubLayerOffsets(swigCPtr), true);
    return ret;
  }

  public SdfLayerOffset GetSubLayerOffset(int index) {
    SdfLayerOffset ret = new SdfLayerOffset(UsdCsPINVOKE.SdfLayerRefPtr_GetSubLayerOffset(swigCPtr, index), true);
    return ret;
  }

  public bool IsMuted() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_IsMuted__SWIG_0(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_SdfPrimSpecHandle GetPseudoRoot() {
    SWIGTYPE_p_SdfPrimSpecHandle ret = new SWIGTYPE_p_SdfPrimSpecHandle(UsdCsPINVOKE.SdfLayerRefPtr_GetPseudoRoot(swigCPtr), true);
    return ret;
  }

  public bool PermissionToEdit() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_PermissionToEdit(swigCPtr);
    return ret;
  }

  public bool PermissionToSave() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_PermissionToSave(swigCPtr);
    return ret;
  }

  public SdfNamespaceEditDetail.Result CanApply(SdfBatchNamespaceEdit arg0, SdfNamespaceEditDetailVector details) {
    SdfNamespaceEditDetail.Result ret = (SdfNamespaceEditDetail.Result)UsdCsPINVOKE.SdfLayerRefPtr_CanApply__SWIG_0(swigCPtr, SdfBatchNamespaceEdit.getCPtr(arg0), SdfNamespaceEditDetailVector.getCPtr(details));
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SdfNamespaceEditDetail.Result CanApply(SdfBatchNamespaceEdit arg0) {
    SdfNamespaceEditDetail.Result ret = (SdfNamespaceEditDetail.Result)UsdCsPINVOKE.SdfLayerRefPtr_CanApply__SWIG_1(swigCPtr, SdfBatchNamespaceEdit.getCPtr(arg0));
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_SdfLayerStateDelegateBasePtr GetStateDelegate() {
    SWIGTYPE_p_SdfLayerStateDelegateBasePtr ret = new SWIGTYPE_p_SdfLayerStateDelegateBasePtr(UsdCsPINVOKE.SdfLayerRefPtr_GetStateDelegate(swigCPtr), true);
    return ret;
  }

  public bool IsDirty() {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_IsDirty(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_std__setT_double_t ListAllTimeSamples() {
    SWIGTYPE_p_std__setT_double_t ret = new SWIGTYPE_p_std__setT_double_t(UsdCsPINVOKE.SdfLayerRefPtr_ListAllTimeSamples(swigCPtr), true);
    return ret;
  }

  public uint GetNumTimeSamplesForPath(SdfPath path) {
    uint ret = UsdCsPINVOKE.SdfLayerRefPtr_GetNumTimeSamplesForPath(swigCPtr, SdfPath.getCPtr(path));
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_std__setT_double_t ListTimeSamplesForPath(SdfPath path) {
    SWIGTYPE_p_std__setT_double_t ret = new SWIGTYPE_p_std__setT_double_t(UsdCsPINVOKE.SdfLayerRefPtr_ListTimeSamplesForPath(swigCPtr, SdfPath.getCPtr(path)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool QueryTimeSample(SdfPath path, double time) {
    bool ret = UsdCsPINVOKE.SdfLayerRefPtr_QueryTimeSample(swigCPtr, SdfPath.getCPtr(path), time);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_SdfFileFormatConstPtr GetFileFormat() {
    SWIGTYPE_p_SdfFileFormatConstPtr ret = new SWIGTYPE_p_SdfFileFormatConstPtr(UsdCsPINVOKE.SdfLayerRefPtr_GetFileFormat(swigCPtr), true);
    return ret;
  }

  public SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t GetFileFormatArguments() {
    SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t ret = new SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t(UsdCsPINVOKE.SdfLayerRefPtr_GetFileFormatArguments(swigCPtr), false);
    return ret;
  }

}

}
